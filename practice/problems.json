{
    "problems": [
        {
            "id": 1,
            "title": "Hello World",
            "description": "Viết chương trình in ra màn hình dòng chữ 'Hello, World!'",
            "difficulty": "Dễ",
            "starter_code": "# Viết code của bạn ở đây\nprint('Hello, World!')",
            "test_cases": [
                {
                    "description": "In ra 'Hello, World!'",
                    "input": "",
                    "expected_output": "Hello, World!"
                }
            ]
        },
        {
            "id": 2,
            "title": "Tính tổng hai số",
            "description": "Viết hàm add(a, b) trả về tổng của hai số a và b",
            "difficulty": "Dễ",
            "starter_code": "def add(a, b):\n    # Viết code của bạn ở đây\n    return a + b\n",
            "test_cases": [
                {
                    "description": "add(2, 3) = 5",
                    "input": "add(2, 3)",
                    "expected_output": "5"
                },
                {
                    "description": "add(-1, 1) = 0",
                    "input": "add(-1, 1)",
                    "expected_output": "0"
                },
                {
                    "description": "add(10, 20) = 30",
                    "input": "add(10, 20)",
                    "expected_output": "30"
                }
            ]
        },
        {
            "id": 3,
            "title": "Kiểm tra số chẵn lẻ",
            "description": "Viết hàm is_even(n) trả về True nếu n là số chẵn, False nếu n là số lẻ",
            "difficulty": "Dễ",
            "starter_code": "def is_even(n):\n    # Viết code của bạn ở đây\n    return n % 2 == 0\n",
            "test_cases": [
                {
                    "description": "is_even(4) = True",
                    "input": "is_even(4)",
                    "expected_output": "True"
                },
                {
                    "description": "is_even(7) = False",
                    "input": "is_even(7)",
                    "expected_output": "False"
                },
                {
                    "description": "is_even(0) = True",
                    "input": "is_even(0)",
                    "expected_output": "True"
                }
            ]
        },
        {
            "id": 4,
            "title": "Tìm số lớn nhất trong danh sách",
            "description": "Viết hàm find_max(numbers) trả về số lớn nhất trong danh sách numbers",
            "difficulty": "Trung bình",
            "starter_code": "def find_max(numbers):\n    # Viết code của bạn ở đây\n    if not numbers:\n        return None\n    return max(numbers)\n",
            "test_cases": [
                {
                    "description": "find_max([1, 3, 2]) = 3",
                    "input": "find_max([1, 3, 2])",
                    "expected_output": "3"
                },
                {
                    "description": "find_max([-1, -5, -2]) = -1",
                    "input": "find_max([-1, -5, -2])",
                    "expected_output": "-1"
                },
                {
                    "description": "find_max([10]) = 10",
                    "input": "find_max([10])",
                    "expected_output": "10"
                }
            ]
        },
        {
            "id": 5,
            "title": "Đếm từ trong chuỗi",
            "description": "Viết hàm count_words(text) đếm số từ trong chuỗi text (phân tách bằng dấu cách)",
            "difficulty": "Trung bình",
            "starter_code": "def count_words(text):\n    # Viết code của bạn ở đây\n    if not text.strip():\n        return 0\n    return len(text.split())\n",
            "test_cases": [
                {
                    "description": "count_words('hello world') = 2",
                    "input": "count_words('hello world')",
                    "expected_output": "2"
                },
                {
                    "description": "count_words('python is great') = 3",
                    "input": "count_words('python is great')",
                    "expected_output": "3"
                },
                {
                    "description": "count_words('') = 0",
                    "input": "count_words('')",
                    "expected_output": "0"
                }
            ]
        },
        {
            "id": 6,
            "title": "Tính giai thừa",
            "description": "Viết hàm factorial(n) tính giai thừa của số n (n! = n × (n-1) × ... × 1)",
            "difficulty": "Trung bình",
            "starter_code": "def factorial(n):\n    # Viết code của bạn ở đây\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n",
            "test_cases": [
                {
                    "description": "factorial(5) = 120",
                    "input": "factorial(5)",
                    "expected_output": "120"
                },
                {
                    "description": "factorial(0) = 1",
                    "input": "factorial(0)",
                    "expected_output": "1"
                },
                {
                    "description": "factorial(1) = 1",
                    "input": "factorial(1)",
                    "expected_output": "1"
                },
                {
                    "description": "factorial(4) = 24",
                    "input": "factorial(4)",
                    "expected_output": "24"
                }
            ]
        },
        {
            "id": 7,
            "title": "Kiểm tra số nguyên tố",
            "description": "Viết hàm is_prime(n) kiểm tra xem n có phải là số nguyên tố không",
            "difficulty": "Khó",
            "starter_code": "def is_prime(n):\n    # Viết code của bạn ở đây\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n",
            "test_cases": [
                {
                    "description": "is_prime(2) = True",
                    "input": "is_prime(2)",
                    "expected_output": "True"
                },
                {
                    "description": "is_prime(17) = True",
                    "input": "is_prime(17)",
                    "expected_output": "True"
                },
                {
                    "description": "is_prime(4) = False",
                    "input": "is_prime(4)",
                    "expected_output": "False"
                },
                {
                    "description": "is_prime(1) = False",
                    "input": "is_prime(1)",
                    "expected_output": "False"
                }
            ]
        },
        {
            "id": 8,
            "title": "Sắp xếp danh sách",
            "description": "Viết hàm sort_list(numbers) sắp xếp danh sách số theo thứ tự tăng dần",
            "difficulty": "Trung bình",
            "starter_code": "def sort_list(numbers):\n    # Viết code của bạn ở đây\n    return sorted(numbers)\n",
            "test_cases": [
                {
                    "description": "sort_list([3, 1, 4, 1, 5]) = [1, 1, 3, 4, 5]",
                    "input": "sort_list([3, 1, 4, 1, 5])",
                    "expected_output": "[1, 1, 3, 4, 5]"
                },
                {
                    "description": "sort_list([]) = []",
                    "input": "sort_list([])",
                    "expected_output": "[]"
                },
                {
                    "description": "sort_list([5, 4, 3, 2, 1]) = [1, 2, 3, 4, 5]",
                    "input": "sort_list([5, 4, 3, 2, 1])",
                    "expected_output": "[1, 2, 3, 4, 5]"
                }
            ]
        },
        {
            "id": 9,
            "title": "Đảo ngược chuỗi",
            "description": "Viết hàm reverse_string(s) đảo ngược chuỗi s",
            "difficulty": "Dễ",
            "starter_code": "def reverse_string(s):\n    # Viết code của bạn ở đây\n    return s[::-1]\n",
            "test_cases": [
                {
                    "description": "reverse_string('hello') = 'olleh'",
                    "input": "reverse_string('hello')",
                    "expected_output": "olleh"
                },
                {
                    "description": "reverse_string('python') = 'nohtyp'",
                    "input": "reverse_string('python')",
                    "expected_output": "nohtyp"
                },
                {
                    "description": "reverse_string('') = ''",
                    "input": "reverse_string('')",
                    "expected_output": ""
                }
            ]
        },
        {
            "id": 10,
            "title": "Tính điểm trung bình",
            "description": "Viết hàm calculate_average(scores) tính điểm trung bình của danh sách điểm số",
            "difficulty": "Dễ",
            "starter_code": "def calculate_average(scores):\n    # Viết code của bạn ở đây\n    if not scores:\n        return 0\n    return sum(scores) / len(scores)\n",
            "test_cases": [
                {
                    "description": "calculate_average([8, 9, 7]) = 8.0",
                    "input": "calculate_average([8, 9, 7])",
                    "expected_output": "8.0"
                },
                {
                    "description": "calculate_average([10, 10, 10]) = 10.0",
                    "input": "calculate_average([10, 10, 10])",
                    "expected_output": "10.0"
                },
                {
                    "description": "calculate_average([]) = 0",
                    "input": "calculate_average([])",
                    "expected_output": "0"
                }
            ]
        },
        {
            "id": 11,
            "title": "Điền phép tính",
            "description": "Cho hai số a và b, và kết quả c. Hãy tìm phép tính (+, -, *, /) sao cho a phép_tính b = c. Sử dụng input() để nhập a, b, c từ bàn phím.",
            "difficulty": "Trung bình",
            "starter_code": "# Nhập dữ liệu từ bàn phím\na = int(input())\nb = int(input())\nc = int(input())\n\n# Viết code của bạn ở đây\nif a + b == c:\n    print('+')\nelif a - b == c:\n    print('-')\nelif a * b == c:\n    print('*')\nelif b != 0 and a / b == c:\n    print('/')\nelse:\n    print('Không có phép tính phù hợp')",
            "test_cases": [
                {
                    "description": "Với a=5, b=3, c=8 thì phép tính là +",
                    "input": "5\n3\n8",
                    "expected_output": "+"
                },
                {
                    "description": "Với a=10, b=4, c=6 thì phép tính là -",
                    "input": "10\n4\n6",
                    "expected_output": "-"
                },
                {
                    "description": "Với a=7, b=3, c=21 thì phép tính là *",
                    "input": "7\n3\n21",
                    "expected_output": "*"
                },
                {
                    "description": "Với a=12, b=3, c=4 thì phép tính là /",
                    "input": "12\n3\n4",
                    "expected_output": "/"
                }
            ]
        },
        {
            "id": 12,
            "title": "Chạy thi",
            "description": "Trong một cuộc thi chạy, các vận động viên được xếp hạng theo thời gian hoàn thành. Nhập số lượng vận động viên n và thời gian của từng người, sau đó in ra thứ hạng của vận động viên có thời gian nhỏ nhất (nhanh nhất). Sử dụng input() để nhập dữ liệu.",
            "difficulty": "Trung bình",
            "starter_code": "# Nhập số lượng vận động viên\nn = int(input())\n\n# Nhập thời gian của từng vận động viên\ntimes = []\nfor i in range(n):\n    time = float(input())\n    times.append(time)\n\n# Viết code của bạn ở đây\nmin_time = min(times)\nwinner_index = times.index(min_time) + 1\nprint(f'Vận động viên thứ {winner_index} chiến thắng với thời gian {min_time}')",
            "test_cases": [
                {
                    "description": "Với 3 vận động viên có thời gian 10.5, 9.8, 11.2",
                    "input": "3\n10.5\n9.8\n11.2",
                    "expected_output": "Vận động viên thứ 2 chiến thắng với thời gian 9.8"
                },
                {
                    "description": "Với 4 vận động viên có thời gian 12.1, 11.5, 10.9, 13.0",
                    "input": "4\n12.1\n11.5\n10.9\n13.0",
                    "expected_output": "Vận động viên thứ 3 chiến thắng với thời gian 10.9"
                }
            ]
        },
        {
            "id": 13,
            "title": "Chia kẹo 2",
            "description": "Có n viên kẹo cần chia đều cho k đứa trẻ. Hỏi mỗi đứa trẻ được bao nhiêu viên kẹo và còn thừa bao nhiêu viên? Sử dụng input() để nhập n và k từ bàn phím.",
            "difficulty": "Dễ",
            "starter_code": "# Nhập dữ liệu từ bàn phím\nn = int(input())\nk = int(input())\n\n# Viết code của bạn ở đây\nif k == 0:\n    print('Không thể chia cho 0 đứa trẻ')\nelse:\n    moi_dua_duoc = n // k\n    con_thua = n % k\n    print(f'Mỗi đứa trẻ được {moi_dua_duoc} viên kẹo')\n    print(f'Còn thừa {con_thua} viên kẹo')",
            "test_cases": [
                {
                    "description": "Với 17 viên kẹo chia cho 5 đứa trẻ",
                    "input": "17\n5",
                    "expected_output": "Mỗi đứa trẻ được 3 viên kẹo\nCòn thừa 2 viên kẹo"
                },
                {
                    "description": "Với 20 viên kẹo chia cho 4 đứa trẻ",
                    "input": "20\n4",
                    "expected_output": "Mỗi đứa trẻ được 5 viên kẹo\nCòn thừa 0 viên kẹo"
                },
                {
                    "description": "Với 15 viên kẹo chia cho 7 đứa trẻ",
                    "input": "15\n7",
                    "expected_output": "Mỗi đứa trẻ được 2 viên kẹo\nCòn thừa 1 viên kẹo"
                }
            ]
        }
    ]
}